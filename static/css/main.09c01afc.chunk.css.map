{"version":3,"sources":["/Users/patricktaylor/Sites/world-cup-stats/src/scss/vendor/_reset.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/helpers/_helpers.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/mixins/_all.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/helpers/_spacing.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/base/_main.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/base/_defaults.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/base/_responsive.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/mixins/_media-queries.scss","/Users/patricktaylor/Sites/world-cup-stats/src/scss/components/_appbar.scss"],"names":[],"mappings":"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","file":"main.09c01afc.chunk.css","sourcesContent":["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  font: inherit;\n  font-size: 100%;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n  border: 0;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after, q:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\n",".clearfix {\n  &::after {\n    @include clearfix;\n  }\n}\n\n.visually-hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n}\n","@mixin button-basic {\n  border: 0;\n  background: none;\n  line-height: 1;\n  cursor: pointer;\n  vertical-align: middle;\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n  &:active {\n    outline: none;\n    background-image: none;\n  }\n}\n\n@mixin clearfix {\n  display: table;\n  clear: both;\n  content: '';\n}\n\n@mixin ellipsis($width: 100%) {\n  // sass-lint:disable no-disallowed-properties\n  max-width: $width;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n@mixin font-size-rem($pixels) {\n  // sass-lint:disable no-disallowed-properties, no-duplicate-properties\n  $value: strip-unit($pixels);\n\n  font-size: $value + px;\n  font-size: ($value / 16) + rem;\n}\n\n@mixin opacity($opacity) {\n  $opacity-ie: $opacity * 100;\n\n  opacity: $opacity;\n  filter: alpha(opacity=$opacity-ie);\n  zoom: 1;\n}\n\n@mixin pseudo($display: block, $position: absolute, $content: '') {\n  display: $display;\n  position: $position;\n  content: $content;\n}\n","//\n// Spacing Helpers\n// 1. Type: padding (p) or margin (m)\n// 2. Position: all, top (t), right (r), bottom (b) or left (l)\n// 3. Size: none (n), small (sm), medium (md), large (lg) or extra-large (xl)\n// --------------------------------------------------\n\n$spacing-sizes: (\n  'n': 0px,\n  'sm': $spacing-sm,\n  'md': $spacing-md,\n  'lg': $spacing-lg,\n  'xl': $spacing-xl,\n);\n\n@each $key, $size in $spacing-sizes {\n  .p-#{$key} {\n    padding: $size !important;\n  }\n  .pt-#{$key} {\n    padding-top: $size !important;\n  }\n  .pr-#{$key} {\n    padding-right: $size !important;\n  }\n  .pb-#{$key} {\n    padding-bottom: $size !important;\n  }\n  .pl-#{$key} {\n    padding-left: $size !important;\n  }\n\n  .m-#{$key} {\n    padding: $size !important;\n  }\n  .mt-#{$key} {\n    padding-top: $size !important;\n  }\n  .mr-#{$key} {\n    padding-right: $size !important;\n  }\n  .mb-#{$key} {\n    padding-bottom: $size !important;\n  }\n  .ml-#{$key} {\n    padding-left: $size !important;\n  }\n}\n","// sass-lint:disable no-color-literals, no-disallowed-properties\n\n* {\n  box-sizing: inherit;\n  &::before, &::after {\n    box-sizing: inherit;\n  }\n}\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\nbody {\n  width: 100%;\n  min-width: 320px;\n  background-color: get-colour('background');\n  color: get-colour('text');\n  font-family: $font-family;\n  font-size: $font-size;\n  font-weight: normal;\n\n  -webkit-overflow-scrolling: touch;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\np {\n  font-family: $font-family;\n  & + p {\n    margin-top: 10px;\n  }\n}\n\na {\n  cursor: pointer;\n  &:hover, &:focus {\n    text-decoration: underline;\n  }\n}\n\nimg {\n  -ms-interpolation-mode: bicubic;\n}\n\nhr {\n  height: 1px;\n  border: 0;\n  background: get-colour('border');\n}\n\n::selection {\n  background: get-colour('secondary');\n  color: get-colour('primary');\n}\n\n::-moz-selection {\n  background: get-colour('secondary');\n  color: get-colour('primary');\n}\n","//\n// Layout\n// --------------------------------------------------\n\n$breakpoints: (\n  'small': 480px,\n  'medium': 768px,\n  'large': 1200px\n);\n\n$container-padding: 15px;\n$grid-columns: 12;\n\n$appbar-height: 50px;\n\n// Spacing\n// --------------------------------------------------\n\n$spacing-sm: 5px;\n$spacing-md: 10px;\n$spacing-lg: 20px;\n$spacing-xl: 40px;\n\n// Colours\n// --------------------------------------------------\n\n$colours: (\n  'primary': #002776,\n  'secondary': #009b3a,\n  'tertiary': #fedf00,\n\n  'success': #43b02a,\n  'info': #00b1ff,\n  'warning': #ffa300,\n  'danger': #e4002b,\n\n  'text': #3b454e,\n  'link': #00b1ff,\n\n  'background': #f5f5f5,\n  'border': #c0c0c0,\n\n  'white': #fff,\n);\n\n@function get-colour($key) {\n  @return map-get($colours, $key);\n}\n\n// Fonts\n// --------------------------------------------------\n\n$font-size: 16px;\n$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n",".container {\n  position: relative;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: $container-padding;\n  padding-left: $container-padding;\n  &::before, &::after {\n    @include clearfix;\n  }\n}\n\n.row {\n  margin-right: -$container-padding;\n  margin-left: -$container-padding;\n  &::before, &::after {\n    @include clearfix;\n  }\n}\n\n.col {\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: $container-padding;\n  padding-left: $container-padding;\n  float: left;\n}\n\n// The order is important here which is why this may look overcomplicated\n// The classes must be created with the smallest first so that the smallest class\n// is the 'default', i.e. col-xs-12 will be applied to all devices sizes\n// but col-sm-6, col-md-3 and col-lg-1 would subsequently override each other.\n@each $size, $size-media-name in (xs: false, sm: 'small', md: 'medium', lg: 'large') {\n  @for $i from 1 through $grid-columns {\n    $column-width: ((100 / $grid-columns) * $i) * 1%;\n    .col-#{$size}-#{$i} {\n      @if $size-media-name {\n        @include media('screen', '>=' + $size-media-name) {\n          width: $column-width;\n        }\n      } @else {\n        width: $column-width;\n      }\n    }\n    .#{$size}-offset-#{$i} {\n      @if $size-media-name {\n        @include media('screen', '>=' + $size-media-name) {\n          margin-left: $column-width;\n        }\n      } @else {\n        margin-left: $column-width;\n      }\n    }\n  }\n}\n\n// Responsive Helpers\n// --------------------------------------------------\n\n.hidden {\n  &-xs {\n    @include media('screen', '<small') {\n      display: none !important;\n    }\n  }\n  &-sm {\n    @include media('screen', '>=small', '<medium') {\n      display: none !important;\n    }\n  }\n  &-md {\n    @include media('screen', '>=medium', '<large') {\n      display: none !important;\n    }\n  }\n  &-lg {\n    @include media('screen', '>=large') {\n      display: none !important;\n    }\n  }\n}\n","//\n// Media Queries\n// https://css-tricks.com/approaches-media-queries-sass/\n// --------------------------------------------------\n\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)',\n    '(min-resolution: 192dpi)'\n  ),\n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)',\n    '(min-resolution: 350dpi)'\n  )\n) !default;\n\n$unit-intervals: (\n  'px': 1,\n  'em': .01,\n  'rem': .1\n) !default;\n\n// Generates a media query based on a list of conditions\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n// Reads a list of media query expressions and separates logical disjunctions into different branches\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join($result, str-replace-first($first, $member, $partial));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n// Parses a string to form a media query expression\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n// Replaces the first occurence of the string with the replacement string\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n// Casts a number to a string\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    } @else if $character == '.' {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n",".appbar {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: $appbar-height + 1px;\n  background-color: get-colour('primary');\n  color: get-colour('white');\n\n  button {\n    @include button-basic;\n    @include font-size-rem(16);\n\n    width: $appbar-height;\n    height: $appbar-height;\n    padding: 0;\n    color: get-colour('white');\n    &:hover {\n      background-color: mix(get-colour('primary'), get-colour('white'), 90%);\n      color: get-colour('white');\n    }\n\n    @include media('screen', '>=medium') {\n      display: none;\n    }\n  }\n\n  h1 {\n    @include font-size-rem(24);\n\n    display: inline-block;\n    height: 100%;\n    margin: 0 30px 0 10px;\n    line-height: $appbar-height;\n    vertical-align: top;\n  }\n}\n"]}